{"ast":null,"code":"var _jsxFileName = \"/Users/kpgirishbhai/Downloads/react-project/meme-generator/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// import html2canvas from \"html2canvas\";\nimport { toPng, toJpeg } from \"html-to-image\";\nimport format from \"date-fns/format\";\n// import memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMeme, setAllMeme] = React.useState([]);\n  React.useEffect(() => fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMeme(data.data.memes)), []);\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMeme.length);\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImg: allMeme[randomNumber].url,\n      topText: \"\",\n      bottomText: \"\"\n    }));\n  }\n  function handleChange(event) {\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  //   const printRef = React.useRef();\n\n  //   const handleDownloadImage = async () => {\n  //     const element = document.getElementById(\"print\"),\n  //       canvas = await html2canvas(element),\n  //       data = canvas.toDataURL(\"image/jpg\"),\n  //       link = document.createElement(\"a\");\n\n  //     link.href = data;\n  //     link.download = \"downloaded-image.jpg\";\n\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //   };\n\n  const ref = React.useRef < HTMLDivElement > null;\n  const getFileName = fileType => `${format(new Date(), \"'SomeName-'HH-mm-ss\")}.${fileType}`;\n  const handleDownloadImage = React.useCallback(() => {\n    if (ref.current === null) {\n      return;\n    }\n    toJpeg(ref.current, {\n      cacheBust: true\n    }).then(dataUrl => {\n      const link = document.createElement(\"a\");\n      link.download = `${getFileName(\"jpg\")}`;\n      link.href = dataUrl;\n      link.click();\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [ref]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"meme-form-input1\",\n          type: \"text\",\n          placeholder: \"Top Text\",\n          name: \"topText\",\n          value: meme.topText,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"meme-form-input2\",\n          type: \"text\",\n          placeholder: \"Bottom Text\",\n          name: \"bottomText\",\n          value: meme.bottomText,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"meme-form-submit\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        className: \"meme\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.randomImg,\n          className: \"meme-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meme--text top\",\n          children: meme.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meme--text bottom\",\n          children: meme.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleDownloadImage,\n        children: \"Download as Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"VPCMkXF5BzkfgPbjoRUUsc7zccU=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","toPng","toJpeg","format","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImg","allMeme","setAllMeme","useEffect","fetch","then","res","json","data","memes","getMemeImage","randomNumber","Math","floor","random","length","prevMeme","url","handleChange","event","target","name","value","ref","useRef","HTMLDivElement","getFileName","fileType","Date","handleDownloadImage","useCallback","current","cacheBust","dataUrl","link","document","createElement","download","href","click","catch","err","console","log","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["/Users/kpgirishbhai/Downloads/react-project/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\n// import html2canvas from \"html2canvas\";\nimport { toPng, toJpeg } from \"html-to-image\";\nimport format from \"date-fns/format\";\n// import memesData from \"../memesData\";\n\nexport default function Meme() {\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"http://i.imgflip.com/1bij.jpg\",\n  });\n\n  const [allMeme, setAllMeme] = React.useState([]);\n  React.useEffect(\n    () =>\n      fetch(\"https://api.imgflip.com/get_memes\")\n        .then((res) => res.json())\n        .then((data) => setAllMeme(data.data.memes)),\n    []\n  );\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMeme.length);\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      randomImg: allMeme[randomNumber].url,\n      topText: \"\",\n      bottomText: \"\",\n    }));\n  }\n\n  function handleChange(event) {\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  //   const printRef = React.useRef();\n\n  //   const handleDownloadImage = async () => {\n  //     const element = document.getElementById(\"print\"),\n  //       canvas = await html2canvas(element),\n  //       data = canvas.toDataURL(\"image/jpg\"),\n  //       link = document.createElement(\"a\");\n\n  //     link.href = data;\n  //     link.download = \"downloaded-image.jpg\";\n\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //   };\n\n  const ref = React.useRef < HTMLDivElement > null;\n\n  const getFileName = (fileType) =>\n    `${format(new Date(), \"'SomeName-'HH-mm-ss\")}.${fileType}`;\n\n  const handleDownloadImage = React.useCallback(() => {\n    if (ref.current === null) {\n      return;\n    }\n    toJpeg(ref.current, { cacheBust: true })\n      .then((dataUrl) => {\n        const link = document.createElement(\"a\");\n        link.download = `${getFileName(\"jpg\")}`;\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [ref]);\n\n  return (\n    <main>\n      <div className=\"meme-form\">\n        <div className=\"meme-form-input\">\n          <input\n            className=\"meme-form-input1\"\n            type=\"text\"\n            placeholder=\"Top Text\"\n            name=\"topText\"\n            value={meme.topText}\n            onChange={handleChange}\n          />\n          <input\n            className=\"meme-form-input2\"\n            type=\"text\"\n            placeholder=\"Bottom Text\"\n            name=\"bottomText\"\n            value={meme.bottomText}\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"meme-form-submit\" onClick={getMemeImage}>\n          Get a new meme image ðŸ–¼\n        </button>\n      </div>\n      <div>\n        <div ref={ref} className=\"meme\">\n          <img src={meme.randomImg} className=\"meme-photo\" />\n          <h2 className=\"meme--text top\">{meme.topText}</h2>\n          <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n        </div>\n        <button type=\"button\" onClick={handleDownloadImage}>\n          Download as Image\n        </button>\n      </div>\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}