{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kpgirishbhai/Downloads/react-project/meme-generator/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kpgirishbhai/Downloads/react-project/meme-generator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { embedResources } from './embed-resources';\nimport { toArray, isInstanceOfElement } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nfunction embedProp(_x, _x2, _x3) {\n  return _embedProp.apply(this, arguments);\n}\nfunction _embedProp() {\n  _embedProp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(propName, node, options) {\n    var _a, propValue, cssString;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n          if (!propValue) {\n            _context.next = 7;\n            break;\n          }\n          _context.next = 4;\n          return embedResources(propValue, null, options);\n        case 4:\n          cssString = _context.sent;\n          node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n          return _context.abrupt(\"return\", true);\n        case 7:\n          return _context.abrupt(\"return\", false);\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _embedProp.apply(this, arguments);\n}\nfunction embedBackground(_x4, _x5) {\n  return _embedBackground.apply(this, arguments);\n}\nfunction _embedBackground() {\n  _embedBackground = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(clonedNode, options) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return embedProp('background', clonedNode, options);\n        case 2:\n          if (_context2.sent) {\n            _context2.next = 5;\n            break;\n          }\n          _context2.next = 5;\n          return embedProp('background-image', clonedNode, options);\n        case 5:\n          _context2.next = 7;\n          return embedProp('mask', clonedNode, options);\n        case 7:\n          if (_context2.sent) {\n            _context2.next = 10;\n            break;\n          }\n          _context2.next = 10;\n          return embedProp('mask-image', clonedNode, options);\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _embedBackground.apply(this, arguments);\n}\nfunction embedImageNode(_x6, _x7) {\n  return _embedImageNode.apply(this, arguments);\n}\nfunction _embedImageNode() {\n  _embedImageNode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(clonedNode, options) {\n    var isImageElement, url, dataURL;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement);\n          if (!(!(isImageElement && !isDataUrl(clonedNode.src)) && !(isInstanceOfElement(clonedNode, SVGImageElement) && !isDataUrl(clonedNode.href.baseVal)))) {\n            _context3.next = 3;\n            break;\n          }\n          return _context3.abrupt(\"return\");\n        case 3:\n          url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n          _context3.next = 6;\n          return resourceToDataURL(url, getMimeType(url), options);\n        case 6:\n          dataURL = _context3.sent;\n          _context3.next = 9;\n          return new Promise(function (resolve, reject) {\n            clonedNode.onload = resolve;\n            clonedNode.onerror = reject;\n            var image = clonedNode;\n            if (image.decode) {\n              image.decode = resolve;\n            }\n            if (image.loading === 'lazy') {\n              image.loading = 'eager';\n            }\n            if (isImageElement) {\n              clonedNode.srcset = '';\n              clonedNode.src = dataURL;\n            } else {\n              clonedNode.href.baseVal = dataURL;\n            }\n          });\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _embedImageNode.apply(this, arguments);\n}\nfunction embedChildren(_x8, _x9) {\n  return _embedChildren.apply(this, arguments);\n}\nfunction _embedChildren() {\n  _embedChildren = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(clonedNode, options) {\n    var children, deferreds;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          children = toArray(clonedNode.childNodes);\n          deferreds = children.map(function (child) {\n            return embedImages(child, options);\n          });\n          _context4.next = 4;\n          return Promise.all(deferreds).then(function () {\n            return clonedNode;\n          });\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _embedChildren.apply(this, arguments);\n}\nexport function embedImages(_x10, _x11) {\n  return _embedImages.apply(this, arguments);\n}\nfunction _embedImages() {\n  _embedImages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(clonedNode, options) {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!isInstanceOfElement(clonedNode, Element)) {\n            _context5.next = 7;\n            break;\n          }\n          _context5.next = 3;\n          return embedBackground(clonedNode, options);\n        case 3:\n          _context5.next = 5;\n          return embedImageNode(clonedNode, options);\n        case 5:\n          _context5.next = 7;\n          return embedChildren(clonedNode, options);\n        case 7:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _embedImages.apply(this, arguments);\n}","map":{"version":3,"names":["embedResources","toArray","isInstanceOfElement","isDataUrl","resourceToDataURL","getMimeType","embedProp","_x","_x2","_x3","_embedProp","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","propName","node","options","_a","propValue","cssString","wrap","_callee$","_context","prev","next","style","getPropertyValue","sent","setProperty","getPropertyPriority","abrupt","stop","embedBackground","_x4","_x5","_embedBackground","_callee2","clonedNode","_callee2$","_context2","embedImageNode","_x6","_x7","_embedImageNode","_callee3","isImageElement","url","dataURL","_callee3$","_context3","HTMLImageElement","src","SVGImageElement","href","baseVal","Promise","resolve","reject","onload","onerror","image","decode","loading","srcset","embedChildren","_x8","_x9","_embedChildren","_callee4","children","deferreds","_callee4$","_context4","childNodes","map","child","embedImages","all","then","_x10","_x11","_embedImages","_callee5","_callee5$","_context5","Element"],"sources":["/Users/kpgirishbhai/Downloads/react-project/meme-generator/node_modules/html-to-image/src/embed-images.ts"],"sourcesContent":["import { Options } from './types'\nimport { embedResources } from './embed-resources'\nimport { toArray, isInstanceOfElement } from './util'\nimport { isDataUrl, resourceToDataURL } from './dataurl'\nimport { getMimeType } from './mimes'\n\nasync function embedProp(\n  propName: string,\n  node: HTMLElement,\n  options: Options,\n) {\n  const propValue = node.style?.getPropertyValue(propName)\n  if (propValue) {\n    const cssString = await embedResources(propValue, null, options)\n    node.style.setProperty(\n      propName,\n      cssString,\n      node.style.getPropertyPriority(propName),\n    )\n    return true\n  }\n  return false\n}\n\nasync function embedBackground<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (!(await embedProp('background', clonedNode, options))) {\n    await embedProp('background-image', clonedNode, options)\n  }\n  if (!(await embedProp('mask', clonedNode, options))) {\n    await embedProp('mask-image', clonedNode, options)\n  }\n}\n\nasync function embedImageNode<T extends HTMLElement | SVGImageElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement)\n\n  if (\n    !(isImageElement && !isDataUrl(clonedNode.src)) &&\n    !(\n      isInstanceOfElement(clonedNode, SVGImageElement) &&\n      !isDataUrl(clonedNode.href.baseVal)\n    )\n  ) {\n    return\n  }\n\n  const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal\n\n  const dataURL = await resourceToDataURL(url, getMimeType(url), options)\n  await new Promise((resolve, reject) => {\n    clonedNode.onload = resolve\n    clonedNode.onerror = reject\n\n    const image = clonedNode as HTMLImageElement\n    if (image.decode) {\n      image.decode = resolve as any\n    }\n\n    if (image.loading === 'lazy') {\n      image.loading = 'eager'\n    }\n\n    if (isImageElement) {\n      clonedNode.srcset = ''\n      clonedNode.src = dataURL\n    } else {\n      clonedNode.href.baseVal = dataURL\n    }\n  })\n}\n\nasync function embedChildren<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const children = toArray<HTMLElement>(clonedNode.childNodes)\n  const deferreds = children.map((child) => embedImages(child, options))\n  await Promise.all(deferreds).then(() => clonedNode)\n}\n\nexport async function embedImages<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    await embedBackground(clonedNode, options)\n    await embedImageNode(clonedNode, options)\n    await embedChildren(clonedNode, options)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}