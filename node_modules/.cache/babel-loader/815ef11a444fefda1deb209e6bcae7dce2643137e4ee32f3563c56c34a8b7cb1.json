{"ast":null,"code":"var _jsxFileName = \"/Users/kpgirishbhai/Downloads/react-project/meme-generator/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"../memesData\";\nimport MemeData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [memeImage, setMemeImage] = React.useState();\n  function getMemeImage() {\n    const memeArray = memesData.data.names;\n    const {\n      url\n    } = memeArray[Math.floor(Math.random() * 100)];\n    setMemeImage(url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"meme-form-input1\",\n          type: \"text\",\n          value: \"Shut up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"meme-form-input2\",\n          type: \"text\",\n          value: \"and take my money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"meme-form-submit\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"meme-photo\",\n      src: memeImage,\n      alt: \"fdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"q4EInoVjuuSLbIgCatv2HGVjE54=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","MemeData","jsxDEV","_jsxDEV","Meme","_s","memeImage","setMemeImage","useState","getMemeImage","memeArray","data","names","url","Math","floor","random","children","className","type","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/kpgirishbhai/Downloads/react-project/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\nimport memesData from \"../memesData\";\nimport MemeData from \"../memesData\";\n\nexport default function Meme() {\n  const [memeImage, setMemeImage] = React.useState();\n\n  function getMemeImage() {\n    const memeArray = memesData.data.names;\n    const { url } = memeArray[Math.floor(Math.random() * 100)];\n    setMemeImage(url);\n  }\n\n  return (\n    <main>\n      <div className=\"meme-form\">\n        <div className=\"meme-form-input\">\n          <input className=\"meme-form-input1\" type=\"text\" value=\"Shut up\" />\n          <input\n            className=\"meme-form-input2\"\n            type=\"text\"\n            value=\"and take my money\"\n          />\n        </div>\n        <button className=\"meme-form-submit\" onClick={getMemeImage}>\n          Get a new meme image ðŸ–¼\n        </button>\n      </div>\n      <img className=\"meme-photo\" src={memeImage} alt=\"fdf\" />\n    </main>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,QAAQ,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,KAAK,CAACS,QAAQ,EAAE;EAElD,SAASC,YAAYA,CAAA,EAAG;IACtB,MAAMC,SAAS,GAAGV,SAAS,CAACW,IAAI,CAACC,KAAK;IACtC,MAAM;MAAEC;IAAI,CAAC,GAAGH,SAAS,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;IAC1DT,YAAY,CAACM,GAAG,CAAC;EACnB;EAEA,oBACEV,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBd,OAAA;QAAKe,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9Bd,OAAA;UAAOe,SAAS,EAAC,kBAAkB;UAACC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAClErB,OAAA;UACEe,SAAS,EAAC,kBAAkB;UAC5BC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACzB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNrB,OAAA;QAAQe,SAAS,EAAC,kBAAkB;QAACO,OAAO,EAAEhB,YAAa;QAAAQ,QAAA,EAAC;MAE5D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNrB,OAAA;MAAKe,SAAS,EAAC,YAAY;MAACQ,GAAG,EAAEpB,SAAU;MAACqB,GAAG,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnD;AAEX;AAACnB,EAAA,CA3BuBD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}