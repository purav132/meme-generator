{"ast":null,"code":"var _jsxFileName = \"/Users/kpgirishbhai/Downloads/react-project/meme-generator/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport html2canvas from \"html2canvas\";\n// import memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMeme, setAllMeme] = React.useState([]);\n  React.useEffect(() => fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMeme(data.data.memes)), []);\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMeme.length);\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImg: allMeme[randomNumber].url,\n      topText: \"\",\n      bottomText: \"\"\n    }));\n  }\n  function handleChange(event) {\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [event.target.name]: event.target.value\n    }));\n  }\n  const printRef = React.useRef();\n  const handleDownloadImage = async () => {\n    const element = printRef.current;\n    const canvas = await html2canvas(element);\n    const data = canvas.toDataURL(\"image/jpg\");\n    const link = document.createElement(\"a\");\n    if (typeof link.download === \"string\") {\n      link.href = data;\n      link.download = \"image.jpg\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"meme-form-input1\",\n          type: \"text\",\n          placeholder: \"Top Text\",\n          name: \"topText\",\n          value: meme.topText,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"meme-form-input2\",\n          type: \"text\",\n          placeholder: \"Bottom Text\",\n          name: \"bottomText\",\n          value: meme.bottomText,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"meme-form-submit\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: printRef,\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImg,\n        className: \"meme-photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleDownloadImage,\n      children: \"Download as Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"xwSkKIgbqhWEk3zFxAFXHSehxwQ=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","html2canvas","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImg","allMeme","setAllMeme","useEffect","fetch","then","res","json","data","memes","getMemeImage","randomNumber","Math","floor","random","length","prevMeme","url","handleChange","event","target","name","value","printRef","useRef","handleDownloadImage","element","current","canvas","toDataURL","link","document","createElement","download","href","body","appendChild","click","removeChild","window","open","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","src","_c","$RefreshReg$"],"sources":["/Users/kpgirishbhai/Downloads/react-project/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\nimport html2canvas from \"html2canvas\";\n// import memesData from \"../memesData\";\n\nexport default function Meme() {\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"http://i.imgflip.com/1bij.jpg\",\n  });\n\n  const [allMeme, setAllMeme] = React.useState([]);\n  React.useEffect(\n    () =>\n      fetch(\"https://api.imgflip.com/get_memes\")\n        .then((res) => res.json())\n        .then((data) => setAllMeme(data.data.memes)),\n    []\n  );\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMeme.length);\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      randomImg: allMeme[randomNumber].url,\n      topText: \"\",\n      bottomText: \"\",\n    }));\n  }\n\n  function handleChange(event) {\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  const printRef = React.useRef();\n\n  const handleDownloadImage = async () => {\n    const element = printRef.current;\n    const canvas = await html2canvas(element);\n\n    const data = canvas.toDataURL(\"image/jpg\");\n    const link = document.createElement(\"a\");\n\n    if (typeof link.download === \"string\") {\n      link.href = data;\n      link.download = \"image.jpg\";\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(data);\n    }\n  };\n\n  return (\n    <main>\n      <div className=\"meme-form\">\n        <div className=\"meme-form-input\">\n          <input\n            className=\"meme-form-input1\"\n            type=\"text\"\n            placeholder=\"Top Text\"\n            name=\"topText\"\n            value={meme.topText}\n            onChange={handleChange}\n          />\n          <input\n            className=\"meme-form-input2\"\n            type=\"text\"\n            placeholder=\"Bottom Text\"\n            name=\"bottomText\"\n            value={meme.bottomText}\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"meme-form-submit\" onClick={getMemeImage}>\n          Get a new meme image ðŸ–¼\n        </button>\n      </div>\n      <div ref={printRef} className=\"meme\">\n        <img src={meme.randomImg} className=\"meme-photo\" />\n        <h2 className=\"meme--text top\">{meme.topText}</h2>\n        <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n      </div>\n      <button type=\"button\" onClick={handleDownloadImage}>\n        Download as Image\n      </button>\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}