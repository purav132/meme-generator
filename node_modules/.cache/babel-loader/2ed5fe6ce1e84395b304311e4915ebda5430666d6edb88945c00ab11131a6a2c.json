{"ast":null,"code":"var _jsxFileName = \"/Users/kpgirishbhai/Downloads/react-project/meme-generator/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  function getMemeImage() {\n    const memesArray = memesData.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImg: memesArray[randomNumber].url\n    }));\n  }\n  function handleChange(event) {\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [event.target.name]: event.target.value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"meme-form-input1\",\n          type: \"text\",\n          placeholder: \"Top Text\",\n          name: \"topText\",\n          value: meme.topText,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"meme-form-input2\",\n          type: \"text\",\n          placeholder: \"Bottom Text\",\n          name: \"bottomText\",\n          value: meme.bottomText,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"meme-form-submit\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImg,\n        className: \"meme-photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"6/rnsAP666M9PwYnWaaawVYGSfs=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImg","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","prevMeme","url","handleChange","event","target","name","value","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["/Users/kpgirishbhai/Downloads/react-project/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\nimport memesData from \"../memesData\";\n\nexport default function Meme() {\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"http://i.imgflip.com/1bij.jpg\",\n  });\n\n  function getMemeImage() {\n    const memesArray = memesData.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      randomImg: memesArray[randomNumber].url,\n    }));\n  }\n\n  function handleChange(event) {\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  return (\n    <main>\n      <div className=\"meme-form\">\n        <div className=\"meme-form-input\">\n          <input\n            className=\"meme-form-input1\"\n            type=\"text\"\n            placeholder=\"Top Text\"\n            name=\"topText\"\n            value={meme.topText}\n            onChange={handleChange}\n          />\n          <input\n            className=\"meme-form-input2\"\n            type=\"text\"\n            placeholder=\"Bottom Text\"\n            name=\"bottomText\"\n            value={meme.bottomText}\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"meme-form-submit\" onClick={getMemeImage}>\n          Get a new meme image ðŸ–¼\n        </button>\n      </div>\n      <div className=\"meme\">\n        <img src={meme.randomImg} className=\"meme-photo\" />\n        <h2 className=\"meme--text top\">{meme.topText}</h2>\n        <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n      </div>\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}