{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kpgirishbhai/Downloads/react-project/meme-generator/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kpgirishbhai/Downloads/react-project/meme-generator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nfunction getContentFromDataUrl(dataURL) {\n  return dataURL.split(/,/)[1];\n}\nexport function isDataUrl(url) {\n  return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n  return \"data:\".concat(mimeType, \";base64,\").concat(content);\n}\nexport function fetchAsDataURL(_x, _x2, _x3) {\n  return _fetchAsDataURL.apply(this, arguments);\n}\nfunction _fetchAsDataURL() {\n  _fetchAsDataURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url, init, process) {\n    var res, blob;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(url, init);\n        case 2:\n          res = _context.sent;\n          if (!(res.status === 404)) {\n            _context.next = 5;\n            break;\n          }\n          throw new Error(\"Resource \\\"\".concat(res.url, \"\\\" not found\"));\n        case 5:\n          _context.next = 7;\n          return res.blob();\n        case 7:\n          blob = _context.sent;\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var reader = new FileReader();\n            reader.onerror = reject;\n            reader.onloadend = function () {\n              try {\n                resolve(process({\n                  res: res,\n                  result: reader.result\n                }));\n              } catch (error) {\n                reject(error);\n              }\n            };\n            reader.readAsDataURL(blob);\n          }));\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _fetchAsDataURL.apply(this, arguments);\n}\nvar cache = {};\nfunction getCacheKey(url, contentType, includeQueryParams) {\n  var key = url.replace(/\\?.*/, '');\n  if (includeQueryParams) {\n    key = url;\n  }\n  // font resource\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\n    key = key.replace(/.*\\//, '');\n  }\n  return contentType ? \"[\".concat(contentType, \"]\").concat(key) : key;\n}\nexport function resourceToDataURL(_x4, _x5, _x6) {\n  return _resourceToDataURL.apply(this, arguments);\n}\nfunction _resourceToDataURL() {\n  _resourceToDataURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(resourceUrl, contentType, options) {\n    var cacheKey, dataURL, content, msg;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n          if (!(cache[cacheKey] != null)) {\n            _context2.next = 3;\n            break;\n          }\n          return _context2.abrupt(\"return\", cache[cacheKey]);\n        case 3:\n          // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n          if (options.cacheBust) {\n            // eslint-disable-next-line no-param-reassign\n            resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n          }\n          _context2.prev = 4;\n          _context2.next = 7;\n          return fetchAsDataURL(resourceUrl, options.fetchRequestInit, function (_ref) {\n            var res = _ref.res,\n              result = _ref.result;\n            if (!contentType) {\n              // eslint-disable-next-line no-param-reassign\n              contentType = res.headers.get('Content-Type') || '';\n            }\n            return getContentFromDataUrl(result);\n          });\n        case 7:\n          content = _context2.sent;\n          dataURL = makeDataUrl(content, contentType);\n          _context2.next = 17;\n          break;\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](4);\n          dataURL = options.imagePlaceholder || '';\n          msg = \"Failed to fetch resource: \".concat(resourceUrl);\n          if (_context2.t0) {\n            msg = typeof _context2.t0 === 'string' ? _context2.t0 : _context2.t0.message;\n          }\n          if (msg) {\n            console.warn(msg);\n          }\n        case 17:\n          cache[cacheKey] = dataURL;\n          return _context2.abrupt(\"return\", dataURL);\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[4, 11]]);\n  }));\n  return _resourceToDataURL.apply(this, arguments);\n}","map":{"version":3,"names":["getContentFromDataUrl","dataURL","split","isDataUrl","url","search","makeDataUrl","content","mimeType","concat","fetchAsDataURL","_x","_x2","_x3","_fetchAsDataURL","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","init","process","res","blob","wrap","_callee$","_context","prev","next","fetch","sent","status","Error","abrupt","Promise","resolve","reject","reader","FileReader","onerror","onloadend","result","error","readAsDataURL","stop","cache","getCacheKey","contentType","includeQueryParams","key","replace","test","resourceToDataURL","_x4","_x5","_x6","_resourceToDataURL","_callee2","resourceUrl","options","cacheKey","msg","_callee2$","_context2","cacheBust","Date","getTime","fetchRequestInit","_ref","headers","get","t0","imagePlaceholder","message","console","warn"],"sources":["/Users/kpgirishbhai/Downloads/react-project/meme-generator/node_modules/html-to-image/src/dataurl.ts"],"sourcesContent":["import { Options } from './types'\n\nfunction getContentFromDataUrl(dataURL: string) {\n  return dataURL.split(/,/)[1]\n}\n\nexport function isDataUrl(url: string) {\n  return url.search(/^(data:)/) !== -1\n}\n\nexport function makeDataUrl(content: string, mimeType: string) {\n  return `data:${mimeType};base64,${content}`\n}\n\nexport async function fetchAsDataURL<T>(\n  url: string,\n  init: RequestInit | undefined,\n  process: (data: { result: string; res: Response }) => T,\n): Promise<T> {\n  const res = await fetch(url, init)\n  if (res.status === 404) {\n    throw new Error(`Resource \"${res.url}\" not found`)\n  }\n  const blob = await res.blob()\n  return new Promise<T>((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onerror = reject\n    reader.onloadend = () => {\n      try {\n        resolve(process({ res, result: reader.result as string }))\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    reader.readAsDataURL(blob)\n  })\n}\n\nconst cache: { [url: string]: string } = {}\n\nfunction getCacheKey(\n  url: string,\n  contentType: string | undefined,\n  includeQueryParams: boolean | undefined,\n) {\n  let key = url.replace(/\\?.*/, '')\n\n  if (includeQueryParams) {\n    key = url\n  }\n\n  // font resource\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\n    key = key.replace(/.*\\//, '')\n  }\n\n  return contentType ? `[${contentType}]${key}` : key\n}\n\nexport async function resourceToDataURL(\n  resourceUrl: string,\n  contentType: string | undefined,\n  options: Options,\n) {\n  const cacheKey = getCacheKey(\n    resourceUrl,\n    contentType,\n    options.includeQueryParams,\n  )\n\n  if (cache[cacheKey] != null) {\n    return cache[cacheKey]\n  }\n\n  // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n  if (options.cacheBust) {\n    // eslint-disable-next-line no-param-reassign\n    resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime()\n  }\n\n  let dataURL: string\n  try {\n    const content = await fetchAsDataURL(\n      resourceUrl,\n      options.fetchRequestInit,\n      ({ res, result }) => {\n        if (!contentType) {\n          // eslint-disable-next-line no-param-reassign\n          contentType = res.headers.get('Content-Type') || ''\n        }\n        return getContentFromDataUrl(result)\n      },\n    )\n    dataURL = makeDataUrl(content, contentType!)\n  } catch (error) {\n    dataURL = options.imagePlaceholder || ''\n\n    let msg = `Failed to fetch resource: ${resourceUrl}`\n    if (error) {\n      msg = typeof error === 'string' ? error : error.message\n    }\n\n    if (msg) {\n      console.warn(msg)\n    }\n  }\n\n  cache[cacheKey] = dataURL\n  return dataURL\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}